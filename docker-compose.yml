version: "3.7"

services:
  db:
    image: postgres:12.1-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_HOST_AUTH_METHOD=trust

  search:
    image: getmeili/meilisearch:v0.16.0
    ports:
      - ${SEARCH_PORT}:7700
    volumes:
      - ./search/data.ms:/data.ms

  api:
    build: ./api
    image: lvconnolly/mychef_api:dev
    ports:
      - ${API_PORT}:80
    volumes:
      - ./api/:/app
    environment:
      - API_MODEL=${API_MODEL}
      - WEB_PORT=${WEB_PORT}
      - WEB_HOST=${WEB_HOST}
      - SEARCH_PORT=${SEARCH_PORT}
      - SEARCH_HOST=${SEARCH_HOST}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_HOST=${POSTGRES_HOST}
      - POSTGRES_DB=${POSTGRES_DB}
    command: /start-reload.sh
    depends_on:
      - db
      - search

  ui:
    build:
      context: ui
      target: develop-stage
    image: lvconnolly/mychef_ui:dev
    ports:
      - ${WEB_PORT}:3000
    volumes:
      - ./ui/:/srv/app
    environment:
      HOST: 0.0.0.0
    command: /bin/sh -c "npm run docker"
    depends_on:
      - api
      - search

  scraper:
    build:
      context: scraper
    image: lvconnolly/mychef_scraper:dev
    volumes:
      - ./scraper/:/app
    command: crawl full_helping
    depends_on:
      - api

volumes:
  postgres_data:
